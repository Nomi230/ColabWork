# -*- coding: utf-8 -*-
"""HomeWork.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qkxKZoNDAPQqQlhTwPhwna_U4sB0UkAz
"""

import pandas as pd
from google.colab import files

upload=files.upload()

for fn in upload.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(upload[fn])))

from google.colab import drive
drive.mount('/content/drive')

from matplotlib import pyplot
from pandas.plotting import scatter_matrix
from sklearn.model_selection import train_test_split
from sklearn.model_selection import KFold
from sklearn.model_selection import cross_val_score
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC

filename='/content/drive/My Drive/iris.csv'
names=['sepal-length','sepal-width','petal-length','petal-width','class']
data=read_csv(filename,names=names)

print(data.shape)

print(data.head(10))
print(data.describe())
print(data.groupby('class').size())

data.plot(kind='box',subplots=True,layout=(2,2),sharex=False , sharey=False)
pyplot.show()

data.hist()
pyplot.show()



scatter_matrix(data)
pyplot.show()

array=data.values
X=array[:,:-1]
Y=array[:,4]
validation_size=0.2
seed=6
X_train,X_validation,Y_train,Y_validation=train_test_split(X,Y,test_size=validation_size,random_state=seed)

models=[]
models.append(('LR',LogisticRegression()))
models.append(('LDA',LinearDiscriminantAnalysis()))
models.append(('knn',KNeighborsClassifier()))
models.append(('CART',DecisionTreeClassifier()))
models.append(('NB',GaussianNB()))
models.append(('SVM',SVC()))

results=[]
names=[]
for name,model in models:
  Kfold=KFold(n_splits=10,random_state=seed)
  cv_results=cross_val_score(model,X_train,Y_train,cv=Kfold,scoring='accuracy')
  results.append(cv_results)
  names.append(name)
  msg = name + ': ' + str(cv_results.mean()) + ' (' + str(cv_results.std()) + ')'
  print(msg)

fig=pyplot.figure()
fig.suptitle('Algoritm Comparision')
ax=fig.add_subplot(111)
pyplot.boxplot(results)
ax.set_xticklabels(names)
pyplot.show()

knn=KNeighborsClassifier()
knn.fit(X_train,Y_train)
prediction=knn.predict(X_validation)
print(accuracy_score(Y_validation,prediction))
print(confusion_matrix(Y_validation,prediction))
print(classification_report(Y_validation,prediction))